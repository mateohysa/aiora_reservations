--
-- PostgreSQL database dump
--

-- Dumped from database version 17.0
-- Dumped by pg_dump version 17.0

--SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: aiora_reservations; Type: DATABASE; Schema: -; Owner: postgres
--

--CREATE DATABASE aiora_reservations WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE_PROVIDER = libc LOCALE = 'en_US.UTF-8';



ALTER DATABASE aiora_reservations OWNER TO postgres;

\connect aiora_reservations

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: reservations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reservations (
    reservation_id bigint NOT NULL,
    guest_count integer NOT NULL,
    guest_name character varying(255) NOT NULL,
    is_hotel_guest boolean,
    meal_deducted boolean,
    reservation_date timestamp(6) without time zone NOT NULL,
    reservation_status character varying(255) NOT NULL,
    room_number character varying(255),
    restaurant_id bigint NOT NULL,
    user_id bigint NOT NULL,
    CONSTRAINT reservations_reservation_status_check CHECK (((reservation_status)::text = ANY ((ARRAY['PENDING'::character varying, 'CONFIRMED'::character varying, 'CANCELLED'::character varying, 'COMPLETED'::character varying])::text[])))
);


ALTER TABLE public.reservations OWNER TO postgres;

--
-- Name: reservations_reservation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.reservations ALTER COLUMN reservation_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reservations_reservation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: restaurants; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.restaurants (
    restaurant_id bigint NOT NULL,
    accepts_outside_guests boolean,
    default_capacity integer NOT NULL,
    description text,
    location character varying(255) NOT NULL,
    max_capacity integer NOT NULL,
    name character varying(255) NOT NULL,
    restaurant_type character varying(255) NOT NULL,
    room_only boolean,
    CONSTRAINT restaurants_restaurant_type_check CHECK (((restaurant_type)::text = ANY ((ARRAY['FINE_DINING'::character varying, 'CASUAL'::character varying, 'BUFFET'::character varying, 'SPECIALTY'::character varying])::text[])))
);


ALTER TABLE public.restaurants OWNER TO postgres;

--
-- Name: restaurants_restaurant_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.restaurants ALTER COLUMN restaurant_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.restaurants_restaurant_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    user_id bigint NOT NULL,
    first_name character varying(255) NOT NULL,
    last_name character varying(255) NOT NULL,
    password character varying(255) NOT NULL,
    username character varying(255) NOT NULL
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: users_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users ALTER COLUMN user_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: reservations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reservations (reservation_id, guest_count, guest_name, is_hotel_guest, meal_deducted, reservation_date, reservation_status, room_number, restaurant_id, user_id) FROM stdin;
1	3	John Doe	f	f	2023-03-15 14:00:00	CONFIRMED	\N	2	3
2	2	Emma Johnson	t	t	2023-04-15 19:30:00	CONFIRMED	304	2	1
3	4	Michael Chen	f	f	2023-04-16 12:00:00	CONFIRMED	\N	2	2
4	8	Sarah Williams	f	f	2023-04-20 18:00:00	CONFIRMED	\N	2	3
\.


--
-- Data for Name: restaurants; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.restaurants (restaurant_id, accepts_outside_guests, default_capacity, description, location, max_capacity, name, restaurant_type, room_only) FROM stdin;
1	f	130	restaurant_1	aiora	130	Main	CASUAL	t
2	t	60	restaurant_2	aiora	60	Flex	CASUAL	f
3	t	60	restaurant_3	aiora	60	Meze	CASUAL	f
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (user_id, first_name, last_name, password, username) FROM stdin;
1	John	Doe	$2a$10$98r186yX8GF8pteqc580TeQT5ERlTlpWlpRv9ILNeNIPvUBbdCwaW	user
2	name	name	$2a$10$x9/pTfHqLFEv9WgjDrcwmecGA6M4UUMR1IfZ5rdZR5XTy0A7Ra342	user2
3	name	name	$2a$10$wWfVPu1TIwbbmBVEjtBefeW9lrWGGDqRU.S7y3SD.J4.o0trDTXCG	user3
\.


--
-- Name: reservations_reservation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.reservations_reservation_id_seq', 4, true);


--
-- Name: restaurants_restaurant_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.restaurants_restaurant_id_seq', 5, true);


--
-- Name: users_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_user_id_seq', 3, true);


--
-- Name: reservations reservations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reservations
    ADD CONSTRAINT reservations_pkey PRIMARY KEY (reservation_id);


--
-- Name: restaurants restaurants_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.restaurants
    ADD CONSTRAINT restaurants_pkey PRIMARY KEY (restaurant_id);


--
-- Name: users ukr43af9ap4edm43mmtq01oddj6; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT ukr43af9ap4edm43mmtq01oddj6 UNIQUE (username);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (user_id);


--
-- Name: reservations fk2tl2cjtd2o3o0nfeekcqfvt70; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reservations
    ADD CONSTRAINT fk2tl2cjtd2o3o0nfeekcqfvt70 FOREIGN KEY (restaurant_id) REFERENCES public.restaurants(restaurant_id);


--
-- Name: reservations fkb5g9io5h54iwl2inkno50ppln; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reservations
    ADD CONSTRAINT fkb5g9io5h54iwl2inkno50ppln FOREIGN KEY (user_id) REFERENCES public.users(user_id);


--
-- PostgreSQL database dump complete
--

